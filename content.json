{"meta":{"title":"Ashinluo-blogs","subtitle":"Ashinluo1的github博客","description":"web前端,WEB,html5,css3,javascrpt,vue,node,H5,微信小程序，webpack,微信公众号","author":"Ashinluo","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"HTTP协议","slug":"HTTP协议","date":"2019-04-24T18:12:43.000Z","updated":"2019-04-25T02:28:17.563Z","comments":true,"path":"2019/04/25/HTTP协议/","link":"","permalink":"http://yoursite.com/2019/04/25/HTTP协议/","excerpt":"","text":"HTTP协议协议协议一些 HTTP协议222","categories":[],"tags":[],"keywords":[]},{"title":"HTTP协议的基础了解","slug":"HTTP协议的基础了解","date":"2019-04-03T07:28:00.000Z","updated":"2019-04-17T15:55:06.741Z","comments":true,"path":"2019/04/03/HTTP协议的基础了解/","link":"","permalink":"http://yoursite.com/2019/04/03/HTTP协议的基础了解/","excerpt":"http协议是大家在互联网中最为熟悉的协议，只要上网大家都会遇到，但是，很多人被问道什么是http协议，http协议的内容是什么就懵了。这里，我们随便聊聊http协议。","text":"http协议是大家在互联网中最为熟悉的协议，只要上网大家都会遇到，但是，很多人被问道什么是http协议，http协议的内容是什么就懵了。这里，我们随便聊聊http协议。 首先，我们说说协议。我一直觉得“协议”这词不是很好理解，协商以后达成的决议，其实，就是规定，轮不到使用者协商的规定，就像本朝的法律，必须遵守。所以，http协议就是http的规定。 http(Hypertext transfer protocol)超文本传输协议，通过浏览器和服务器进行数据交互，进行超文本（文本、图片、视频等）传输的规定。也就是说，http协议规定了超文本传输所要遵守的规则。那么网页在输入URL到加载，http究竟做了哪些工作呢？（见下图） ​ 浏览器负责发起请求和最后的响应请求，服务器接收请求后，处理请求。我们一步一步来看这个过程，http是如何设定步骤，设置规范的。 1、输入URL。不管是链接还是地址栏的输入，情况都是一样的。http协议已经规定了URL的格式，通过http协议中的域名或IP找到服务器。 2、找到服务器的同时，会有http的请求发送过来，告诉服务器我求你做什么？http协议规定了发送请求的格式，这个格式有三部分组成请求行、请求头、请求体。 请求行包括请求的方式（get、post或其他）、要求响应的文件、http版本。 请求头包括本机信息、浏览器信息等等，当然，也包括URL中？后面的参数。如图： 请求体包括POST传递数据的相关信息，Get方式传值时，请求体为空。 3、请求信息发送至服务器以后，服务器会获取传递过来的相关信息进行后端程序的处理。一般通过request.querystring获取URL传递过来的指，通过request.form获取POST传递过来的值，当然，也是可以获取到所有的其他请求过来的信息，如浏览器信息、cookie信息、操作系统信息等。获取相关的数据以后，服务器就会根据程序进行处理。 4、处理完成以后，服务器会做出响应，向浏览器输出相关信息。http对响应的格式也做出了规定，响应的信息主要包括，响应码、响应头、响应体。 响应码用来标识服务器响应的结果，如我们常看到的200、404等。大致的分类如下：1开头的表示消息，2开头表示成功，3开头表示重定向，4开头表示失败，5开头表示服务器异常。 响应头记录服务器相关信息如服务器是否启用压缩、服务器为IIS或Ngnix、程序所用服务端语言等等。当然，缓存也是在这里设置的，通过修改响应头可以修改html在本地缓存的情况，如设置浏览器缓存过期的时间。 响应体主要是我看到的html的相关内容了。 完成以上四部操作以后，浏览器就断开了与服务器的数据连接，不能在进行数据传输，如果需要再次进行数据传输，那么一切就要从输入URL开始。 如此，便是一个完整的网页流程，http从中的作用就是对整个流程进行规定，包括执行步骤，每一步的数据格式。只有了解http协议以及网页是如何产生的以后，才能对网页进行更好的控制，例如控制浏览器缓存、通过非浏览器发送http请求、get和post传值的选择，甚至是建立长连接，这些都是以http协议为基础。 parse() stringify()var arr=[] var arr=new Array()push() pop() join() shift() reserve() slice()","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}]},{"title":"使用github pages服务搭建博客的好处","slug":"github-pages博客的好处","date":"2017-03-29T07:28:00.000Z","updated":"2019-03-31T05:27:05.841Z","comments":true,"path":"2017/03/29/github-pages博客的好处/","link":"","permalink":"http://yoursite.com/2017/03/29/github-pages博客的好处/","excerpt":"使用github pages服务搭建博客的好处有： 全是静态文件，访问速度快； 免费方便，不用花一分钱就可以搭建一个自由的个 人博客，不需要服务器不需要后台； 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；","text":"使用github pages服务搭建博客的好处有： 全是静态文件，访问速度快； 免费方便，不用花一分钱就可以搭建一个自由的个 人博客，不需要服务器不需要后台； 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的； 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行； 博客内容可以轻松打包、转移、发布到其它平台； 等等；","categories":[{"name":"hexo搭建博客篇","slug":"hexo搭建博客篇","permalink":"http://yoursite.com/categories/hexo搭建博客篇/"}],"tags":[{"name":"博客之旅","slug":"博客之旅","permalink":"http://yoursite.com/tags/博客之旅/"}],"keywords":[{"name":"hexo搭建博客篇","slug":"hexo搭建博客篇","permalink":"http://yoursite.com/categories/hexo搭建博客篇/"}]},{"title":"hello-world","slug":"hello-world","date":"2016-03-30T12:36:00.000Z","updated":"2019-03-30T19:13:21.325Z","comments":true,"path":"2016/03/30/hello-world/","link":"","permalink":"http://yoursite.com/2016/03/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server(运行)1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"hexo搭建博客篇","slug":"hexo搭建博客篇","permalink":"http://yoursite.com/categories/hexo搭建博客篇/"}],"tags":[{"name":"博客之旅","slug":"博客之旅","permalink":"http://yoursite.com/tags/博客之旅/"}],"keywords":[{"name":"hexo搭建博客篇","slug":"hexo搭建博客篇","permalink":"http://yoursite.com/categories/hexo搭建博客篇/"}]}]}